#!/bin/bash
BACKUP_CONFIG="${HOME}/.backup-home"
BACKUP_EXEC="$(dirname "${BASH_SOURCE[0]}")/rsync-time-backup/rsync_tmbackup.sh"

usage() {
    printf "Usage: %s [-h]

Configuration can be provided in by the following files in
%s:

- excludes   An rsync exclude-from file [optional]
- mount     Contains the directory to confirm the backup disk is mounted
" "$(basename "$0")" "$BACKUP_CONFIG"
}

if [ "$1" == "-h" ]; then
    usage
    exit 0
fi

BACKUP_MOUNT_POINT_CONFIG="${BACKUP_CONFIG}/mount"
if [ ! -f "$BACKUP_MOUNT_POINT_CONFIG" ]; then
    printf "backup-home
[ERROR] Cannot perform backup: no configuration provided!
[ERROR] Please specify backup destination folder in %s
" "$BACKUP_MOUNT_POINT_CONFIG"

exit 1
fi

BACKUP_MOUNT_POINT=$(if [ -f "$BACKUP_MOUNT_POINT_CONFIG" ]; then cat "$BACKUP_MOUNT_POINT_CONFIG"; fi)
if [ -z "$BACKUP_MOUNT_POINT" ]; then
    printf "backup-home
[ERROR] Cannot perform backup: no destination provided!
[ERROR] Please specify backup destination folder in %s
" "$BACKUP_MOUNT_POINT_CONFIG"

exit 1
fi

if ! mount | grep "$BACKUP_MOUNT_POINT" > /dev/null; then
    printf "backup-home
[LOG] Cannot perform backup: drive not attached to mount point
[LOG] Exiting without backup
"

exit 0
fi

if [ -f "${BACKUP_CONFIG}/remote-test" ] && [ -f "${BACKUP_CONFIG}/remote-copy" ]; then
    REMOTE_BACKUP_ENABLED=true

    if $BACKUP_CONFIG/remote-test; then
        read -rsp "To copy the backup to a remote location, provide the encryption password: " ENCRYPTION_PASSWORD
        echo
    else
        echo "Remote backup is currently unavailable."
    fi
else
    printf "backup-home
[LOG] No configuration provided for remote backup.
[LOG] Continuing with attached-only backup.
"
fi

BACKUP_DESTINATION="${BACKUP_MOUNT_POINT}/$(hostname)-$(whoami)/"

BACKUP_EXCLUDES_FILE=
if [ -f "$BACKUP_CONFIG/excludes" ]; then
    BACKUP_EXCLUDES_FILE="$BACKUP_CONFIG/excludes"
fi

$BACKUP_EXEC "$HOME" "$BACKUP_DESTINATION" "$BACKUP_EXCLUDES_FILE"

if [ -n "$ENCRYPTION_PASSWORD" ]; then
    LATEST_NAME=$(readlink "$BACKUP_DESTINATION/latest")

    echo "Archiving latest backup"
    ARCHIVE_FILE_PATH="${BACKUP_DESTINATION}latest.tar.gz"
    time tar czf "$ARCHIVE_FILE_PATH" -C "$BACKUP_DESTINATION" "${LATEST_NAME}"

    echo "Encrypting archive"
    ENCRYPTED_FILE_PATH="${BACKUP_DESTINATION}${LATEST_NAME}.tar.gz"
    time openssl enc -e -aes256 -salt -k "$ENCRYPTION_PASSWORD" -in "${ARCHIVE_FILE_PATH}" -out "$ENCRYPTED_FILE_PATH"
    unset ENCRYPTION_PASSWORD
    rm "$ARCHIVE_FILE_PATH"

    echo "Copying encrypted archive to remote location"
    time $BACKUP_CONFIG/remote-copy "$ENCRYPTED_FILE_PATH"
    rm "$ENCRYPTED_FILE_PATH"
fi
